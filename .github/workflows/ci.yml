name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 18
  # Secrets 名をリポジトリ側と合わせる
  EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  # ---------- Unit & lint & coverage ----------
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check (strict - must pass)
        run: |
          echo "Running TypeScript compilation check..."
          npm run typecheck || (echo "❌ TypeScript compilation failed! Fix all type errors before proceeding." && exit 1)
          echo "✅ TypeScript compilation passed with zero errors"

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  # ---------- Build & OTA Deploy ----------
  build:
    name: Build & Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # Android build (JSON report → artifacts)
      - name: EAS Build Android
        run: |
          npx eas build --profile preview --platform android --non-interactive \
            --json --output ./builds/eas-android.json
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # iOS build (JSON report → artifacts)
      - name: EAS Build iOS
        run: |
          npx eas build --profile preview --platform ios --non-interactive \
            --json --output ./builds/eas-ios.json
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload build reports
        uses: actions/upload-artifact@v4
        with:
          name: eas-build-json
          path: builds/*.json

      - name: Validate build outputs
        run: |
          echo "Validating EAS build outputs..."
          if [ -f builds/eas-android.json ]; then
            echo "✅ Android build JSON found"
            cat builds/eas-android.json | jq '.artifacts[0].buildUrl' || echo "No Android build URL found"
          else
            echo "❌ Android build JSON missing"
          fi
          
          if [ -f builds/eas-ios.json ]; then
            echo "✅ iOS build JSON found"
            cat builds/eas-ios.json | jq '.artifacts[0].buildUrl' || echo "No iOS build URL found"  
          else
            echo "❌ iOS build JSON missing"
          fi

      # OTA update (Expo channel: preview)
      - name: EAS Update (OTA)
        run: |
          npx eas update --branch preview --message "${{ github.event.head_commit.message }}"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # ---------- Detox iOS ----------
  e2e-ios:
    name: E2E Tests (iOS)
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'pull_request' || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Detox CLI
        run: npm install -g detox-cli

      - name: Prepare iOS simulator
        run: |
          xcrun simctl boot "iPhone 15 Pro" || true
          xcrun simctl list devices

      - name: Build iOS app for E2E
        run: npm run e2e:build:ios

      - name: Run E2E tests (iOS)
        run: npm run e2e:test:ios

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-ios-results
          path: |
            e2e/artifacts/
            e2e/test-results/

  # ---------- Detox Android ----------
  e2e-android:
    name: E2E Tests (Android)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci

      - name: Install Detox CLI
        run: npm install -g detox-cli

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start Android emulator & run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          profile: Nexus 6
          ram-size: 4096M
          heap-size: 1024M
          script: |
            echo "Building Android app for E2E..."
            npm run e2e:build:android
            echo "Running E2E tests..."
            npm run e2e:test:android

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-android-results
          path: |
            e2e/artifacts/
            e2e/test-results/

  # ---------- Security ----------
  # Note: Security scanning is handled by Snyk integration (see PR checks)